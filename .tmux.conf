# support copy to local clipboard even withing ssh remote
set -as terminal-overrides ',screen-256color:Ms=\E]52;%p1%s;%p2%s\007'
set -s set-clipboard on
# Set the prefix to ^A.
set-option -sg escape-time 10
set-option -g focus-events on
unbind C-b
set -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
#bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c
unbind ^C
#bind ^C new-window
# bind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
#bind ^@ next-window
unbind ^N
#bind ^N next-window
unbind " "
#bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
#bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
#bind ^H previous-window
unbind ^P
#bind ^P previous-window
unbind p
bind p previous-window
#unbind BSpace
#bind BSpace previous-window

# windows ^W w
unbind ^W
#bind ^W list-windows
unbind w
bind w list-windows

# kill K k
unbind K
#bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
#bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
#bind | split-window

# :kB: focus up
unbind Tab
#bind Tab select-pane -t:.+
unbind BTab
#bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 2
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
# go to the tmux promt mode and run the command list-keys -t vi-copy
setw -g mode-keys vi

set -g status-justify left
set -g status-interval 15 # 15 sec refresh
set -g display-time 3000
set -g status-bg black
set -g status-fg white
# set-window-option -g window-status-current-fg blue
# set-window-option -g window-status-current-bg yellow
# set-window-option -g window-status-current-attr default # bright
set -g status-left-length 15
set -g status-right-length 55
#set -g status-left "#[fg=white,bg=blue] > #I #W < #[default] |" # 0:bash
set -g status-left "#[fg=white,bg=blue] > #S < #[default] |" # session-name
#set -g status-right "#[fg=red,bright][ #[fg=cyan]#H #[fg=red]]#[default] #[fg=yellow,bright]- %Y.%m.%d #[fg=green]%H:%M #[default]#[fg=magenta,bright]#[default]"
set -g status-right "#[fg=red,bright][ #[fg=cyan] Alec Tu #[fg=red]]#[default] "

set -g mouse on
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"
# # move x clipboard into tmux paste buffer
bind-key ^p run-shell "xclip -sel clip -o | tmux load-buffer - ; tmux paste-buffer" 
